<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>dev on RaR</title>
    <link>https://rolfaufreisen.netlify.app/tags/dev/</link>
    <description>Recent content in dev on RaR</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Nov 2022 15:15:20 +0100</lastBuildDate><atom:link href="https://rolfaufreisen.netlify.app/tags/dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>the password thing</title>
      <link>https://rolfaufreisen.netlify.app/posts/password/</link>
      <pubDate>Fri, 25 Nov 2022 15:15:20 +0100</pubDate>
      
      <guid>https://rolfaufreisen.netlify.app/posts/password/</guid>
      <description>Why i wanted password protection? I want to share personal stuff also with pictures therefore i want to limit who can access this site.
The implementation For now at least the implemtation is kinda poor. You can just bypass it by disabeling JavaScript in your browser.
Then having a look in the SourceCode and setting the password cookie by yourselfe. (credit to TimstOrm)
The problem is that no client side aithentication is rly secure but because of the static nature of this site Authetication via OAuth (which would be the standard way) is not easy to implement.</description>
    </item>
    
    <item>
      <title>Why is this site so fast?!</title>
      <link>https://rolfaufreisen.netlify.app/posts/fastblog/</link>
      <pubDate>Fri, 25 Nov 2022 14:42:56 +0100</pubDate>
      
      <guid>https://rolfaufreisen.netlify.app/posts/fastblog/</guid>
      <description>Hugo This site uses Hugo a static site generation framework written in Go.
Hugo has several charachteristics that makes it somewhat the perfect framewwork to build modern webapps that do not need a database connection.
It has very fast build times, a vast collection of templates to choose from and extensive possibilites for extensions.
And all of that with basic knowledge of HTML and Markdown.
Furthermore the documentation is very good and because of the high popluarity of this framework pared with it beeing open source we can expect a longevity.</description>
    </item>
    
  </channel>
</rss>
